/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package working;

import com.amazonaws.auth.AWSStaticCredentialsProvider;
import com.amazonaws.auth.BasicAWSCredentials;
import com.amazonaws.client.builder.AwsClientBuilder.EndpointConfiguration;
import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.lambda.runtime.RequestHandler;
import com.amazonaws.services.lambda.runtime.events.SQSEvent;
import com.amazonaws.services.lambda.runtime.events.SQSEvent.SQSMessage;
import com.amazonaws.services.sqs.AmazonSQSAsync;
import com.amazonaws.services.sqs.AmazonSQSAsyncClientBuilder;
import com.amazonaws.services.sqs.model.DeleteMessageRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ReceivingLambda implements RequestHandler<SQSEvent, String> {

    private static final Logger logger = LoggerFactory.getLogger(ReceivingLambda.class);

    public String handleRequest(final SQSEvent request, final Context context) {
        
        AmazonSQSAsync amazonSQSAsync = getClient();

        for (SQSMessage message : request.getRecords()) {
            amazonSQSAsync.deleteMessage(new DeleteMessageRequest(System.getenv("QUEUE_URL"), message.getReceiptHandle()));
        }

        return "Done";
    }

    private AmazonSQSAsync getClient() {
        EndpointConfiguration endpointConfiguration = new EndpointConfiguration(System.getenv("OVERRIDE_QUEUE_URL"), System.getenv("AWS_REGION"));
        BasicAWSCredentials awsCreds = new BasicAWSCredentials("access_key_id", "secret_key_id");
        return AmazonSQSAsyncClientBuilder.standard().withEndpointConfiguration(endpointConfiguration).withCredentials(new AWSStaticCredentialsProvider(awsCreds)).build();
    }
}
